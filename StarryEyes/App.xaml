<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Custom="http://metro.mahapps.com/winfx/xaml/shared"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" x:Class="StarryEyes.App"
             Startup="Application_Startup"
             StartupUri="Views\MainWindow.xaml"
             mc:Ignorable="d">
    <Application.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Simple Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="MetroSquareButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="#FFD5D5D5" />
                <Setter Property="Foreground" Value="#FF222222" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Padding" Value="10,5" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}" />
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  RecognizesAccessKey="True" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#FF222222" />
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="#7F222222" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="DarkGray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="MetroSquareDefaultButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="#FFFFFFFF" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Padding" Value="10,5" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="Border"
                                        Background="#FF18A2E7"
                                        BorderThickness="{TemplateBinding BorderThickness}" />
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  RecognizesAccessKey="True" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.HotTrackColorKey}}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="#7F222222" />
                                    <Setter TargetName="Border" Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlDarkColorKey}}" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="MetroSquareUnfocusableFlatButton" TargetType="{x:Type Button}">
                <Setter Property="MinHeight" Value="25" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontSize" Value="10" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Padding" Value="5,6" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                                    <SplineDoubleKeyFrame KeyTime="0" Value="0.7" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused" />
                                        <VisualState x:Name="Unfocused" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ValidationStates" />
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="Background" CornerRadius="0" />
                                <Rectangle x:Name="DisabledVisualElement"
                                           Fill="Gainsboro"
                                           IsHitTestVisible="False"
                                           Opacity="0" />
                                <Border x:Name="MouseOverBorder"
                                        Background="Gainsboro"
                                        Opacity="0" />
                                <Border x:Name="PressedBorder"
                                        Background="Gray"
                                        Opacity="0" />
                                <ContentPresenter x:Name="contentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  RecognizesAccessKey="True" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        	<ControlTemplate x:Key="MetroCircleButtonTemplate" TargetType="{x:Type Button}">
        		<Grid x:Name="grid" Opacity="0.8">
        			<VisualStateManager.VisualStateGroups>
        				<VisualStateGroup x:Name="CommonStates">
        					<VisualState x:Name="MouseOver">
        						<Storyboard>
        							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="arc">
        								<EasingColorKeyFrame KeyTime="0" Value="#0CFFFFFF"/>
        							</ColorAnimationUsingKeyFrames>
        							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
        								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        							</DoubleAnimationUsingKeyFrames>
        						</Storyboard>
        					</VisualState>
        					<VisualState x:Name="Pressed">
        						<Storyboard>
        							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="arc">
        								<EasingColorKeyFrame KeyTime="0" Value="#19FFFFFF"/>
        							</ColorAnimationUsingKeyFrames>
        						</Storyboard>
        					</VisualState>
        					<VisualState x:Name="Disabled"/>
        					<VisualState x:Name="Normal">
        						<Storyboard>
        							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
        								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        							</DoubleAnimationUsingKeyFrames>
        						</Storyboard>
        					</VisualState>
        				</VisualStateGroup>
        				<VisualStateGroup x:Name="FocusStates">
        					<VisualState x:Name="Focused"/>
        				</VisualStateGroup>
        				<VisualStateGroup x:Name="ValidationStates">
        					<VisualState x:Name="InvalidFocused"/>
        					<VisualState x:Name="InvalidUnfocused"/>
        				</VisualStateGroup>
        			</VisualStateManager.VisualStateGroups>
        			<ed:Arc x:Name="arc" ArcThicknessUnit="Percent" EndAngle="360" Fill="#00000000" HorizontalAlignment="Stretch" Height="Auto" Stretch="None" StartAngle="0" VerticalAlignment="Stretch" Width="Auto" Stroke="White" ArcThickness="1"/>
        			<ContentPresenter HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="2"/>
        		</Grid>
        	</ControlTemplate>
        </ResourceDictionary>

    </Application.Resources>
</Application>
