<UserControl x:Class="StarryEyes.Views.WindowParts.Flips.SettingFlip"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:behaviors="clr-namespace:StarryEyes.Views.Behaviors"
             xmlns:clr="clr-namespace:System;assembly=mscorlib"
             xmlns:controls="clr-namespace:StarryEyes.Views.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:flips="clr-namespace:StarryEyes.Views.WindowParts.Flips"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:smb="clr-namespace:StarryEyes.Views.Messaging.Behaviors"
             xmlns:utils="clr-namespace:StarryEyes.Views.Utils"
             xmlns:vmp="clr-namespace:StarryEyes.ViewModels.WindowParts.Flips"
             d:DataContext="{d:DesignInstance {x:Type vmp:SettingFlipViewModel}}"
             d:DesignHeight="600"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
                <ResourceDictionary Source="/Themes/FlipContent.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <utils:BooleanToVisibleConverter x:Key="BoolVisibleConveter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <flips:FlipContent IsOpen="{Binding IsConfigurationActive}"
                       OwnerVisibility="{Binding Visibility,
                                                 Mode=TwoWay,
                                                 RelativeSource={RelativeSource AncestorType={x:Type UserControl},
                                                                                Mode=FindAncestor}}"
                       Visibility="Visible">
        <i:Interaction.Triggers>
            <l:InteractionMessageTrigger Messenger="{Binding Messenger}">
                <smb:TaskDialogInteractionMessageAction />
            </l:InteractionMessageTrigger>
        </i:Interaction.Triggers>
        <Grid Background="White">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Button Width="48"
                        Height="48"
                        Margin="-6,-6,12,12"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Template="{DynamicResource MetroBlackCircleButtonTemplate}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="Close" TargetObject="{Binding Mode=OneWay}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Path Width="25"
                          Height="18"
                          Data="F1 M 36,22L 36,26L 19.75,26L 27,33L 20.5,33L 11,24L 20.5,15L 27,15L 19.75,22L 36,22 Z "
                          Fill="Black"
                          Stretch="Fill" />
                </Button>
                <TextBlock Grid.Column="1"
                           VerticalAlignment="Top"
                           FontSize="32"
                           Padding="4,8,4,1"
                           Text="Setting"
                           TextWrapping="Wrap" />
            </Grid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <ListBox x:Name="SettingCategories"
                         Width="180"
                         HorizontalContentAlignment="Stretch"
                         SelectedIndex="2">
                    <ListBox.Resources>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Background" Value="{x:Null}" />
                        </Style>
                    </ListBox.Resources>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Background="White">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <ed:RegularPolygon x:Name="Indicator"
                                                   Width="7"
                                                   Height="5"
                                                   Margin="12,1,0,0"
                                                   VerticalAlignment="Center"
                                                   Fill="Black"
                                                   InnerRadius="1"
                                                   PointCount="3"
                                                   RenderTransformOrigin="0.5,0.5"
                                                   Stretch="Fill"
                                                   Visibility="Collapsed">
                                    <ed:RegularPolygon.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </ed:RegularPolygon.RenderTransform>
                                </ed:RegularPolygon>
                                <TextBlock x:Name="DisplayText"
                                           Grid.Column="1"
                                           Margin="12,6"
                                           Text="{Binding}" />
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                    <Setter TargetName="Indicator" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="Indicator" Property="Fill" Value="#1BA1E2" />
                                    <Setter TargetName="DisplayText" Property="Foreground" Value="#1BA1E2" />
                                    <Setter TargetName="DisplayText" Property="Margin" Value="6" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <clr:String>アカウント</clr:String>
                    <clr:String>タイムライン</clr:String>
                    <clr:String>ミュート</clr:String>
                    <clr:String>入力</clr:String>
                    <clr:String>通知と確認</clr:String>
                    <clr:String>キーアサイン</clr:String>
                    <clr:String>外部サービス</clr:String>
                    <clr:String>プロキシー</clr:String>
                    <clr:String>高度な設定</clr:String>
                </ListBox>
                <Grid Grid.Column="1" Margin="0,6,0,0">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=SettingCategories, Path=SelectedIndex}" Value="0">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Border Margin="16,0"
                            BorderBrush="DimGray"
                            BorderThickness="1">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <ItemsControl AllowDrop="True" ItemsSource="{Binding Accounts}">
                                <i:Interaction.Behaviors>
                                    <behaviors:DropAcceptBehavior Description="{Binding DropDescription}" />
                                </i:Interaction.Behaviors>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type vmp:TwitterAccountConfigurationViewModel}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <controls:LazyImage Grid.RowSpan="2"
                                                                Width="73"
                                                                Height="73"
                                                                Margin="8,4,4,4"
                                                                VerticalAlignment="Top"
                                                                DecodePixelWidth="73"
                                                                UriSource="{Binding ProfileImage}">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:DragStartBehavior AllowedEffects="Move" DragDropData="{Binding}" />
                                                </i:Interaction.Behaviors>
                                            </controls:LazyImage>
                                            <TextBlock Grid.Column="1"
                                                       Margin="8,4,0,4"
                                                       HorizontalAlignment="Left"
                                                       VerticalAlignment="Top"
                                                       FontSize="18"
                                                       Text="{Binding ScreenName,
                                                                      FallbackValue=USER NAME}"
                                                       TextWrapping="Wrap" />
                                            <Button Grid.Column="1"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Stretch"
                                                    Background="#FFE51400"
                                                    Content="このアカウントを削除"
                                                    Foreground="White"
                                                    Padding="8,0"
                                                    Style="{StaticResource MetroSquareButtonStyle}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Click">
                                                        <ei:CallMethodAction MethodName="Deauthorize" TargetObject="{Binding Mode=OneWay}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </Button>
                                            <StackPanel Grid.Row="1"
                                                        Grid.RowSpan="2"
                                                        Grid.Column="1"
                                                        Grid.ColumnSpan="2"
                                                        Height="Auto"
                                                        Margin="4,0,0,0"
                                                        HorizontalAlignment="Stretch"
                                                        VerticalAlignment="Stretch"
                                                        Background="Gainsboro"
                                                        Orientation="Vertical">
                                                <DockPanel Margin="4" Visibility="{Binding CanFallback}">
                                                    <CheckBox Margin="0,0,4,0"
                                                              VerticalAlignment="Center"
                                                              Content="POST規制時にフォールバック"
                                                              IsChecked="{Binding IsFallbackEnabled}" />
                                                    <CheckBox Margin="4"
                                                              Content="お気に入りもフォールバック"
                                                              DockPanel.Dock="Right"
                                                              IsChecked="{Binding FallbackFavorites}"
                                                              Visibility="{Binding IsFallbackEnabled,
                                                                                   Converter={StaticResource BoolVisibleConveter}}" />
                                                    <ComboBox ItemsSource="{Binding Accounts}"
                                                              SelectedItem="{Binding FallbackAccount}"
                                                              Visibility="{Binding IsFallbackEnabled,
                                                                                   Converter={StaticResource BoolVisibleConveter}}">
                                                        <ComboBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <StackPanel Orientation="Horizontal">
                                                                    <controls:LazyImage Width="16"
                                                                                        Height="16"
                                                                                        UriSource="{Binding ProfileImageUri}" />
                                                                    <TextBlock Text="{Binding ScreenName}" />
                                                                </StackPanel>
                                                            </DataTemplate>
                                                        </ComboBox.ItemTemplate>
                                                    </ComboBox>
                                                </DockPanel>
                                                <StackPanel Orientation="Horizontal">
                                                    <CheckBox Margin="4"
                                                              Content="ツイートをリアルタイムに受信する[推奨]"
                                                              IsChecked="{Binding IsUserStreamsEnabled}" />
                                                    <CheckBox Margin="4,4,4,4"
                                                              Content="他人へのリプライを受信する"
                                                              IsChecked="{Binding ReceiveRepliesAll}"
                                                              Visibility="{Binding IsUserStreamsEnabled,
                                                                                   Converter={StaticResource BoolVisibleConveter}}" />
                                                    <CheckBox Margin="4,4,4,4"
                                                              Content="他人のアクティビティを受信する"
                                                              IsChecked="{Binding ReceiveFollowingsActivity}"
                                                              Visibility="{Binding IsUserStreamsEnabled,
                                                                                   Converter={StaticResource BoolVisibleConveter}}" />
                                                </StackPanel>
                                                <CheckBox Margin="4"
                                                          Content="アップロードするメディアにSensitiveフラグを付ける"
                                                          IsChecked="{Binding IsMarkMediaAsPossiblySensitive}" />
                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                    </Border>
                    <TextBlock Grid.Row="1"
                               Margin="16, 2"
                               Text="アカウントのアイコンをドラッグすると並び替えることができます。" />
                    <DockPanel Grid.Row="2"
                               Margin="16"
                               LastChildFill="False">
                        <Button DockPanel.Dock="Right" Style="{StaticResource MetroSquareDefaultButtonStyle}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <ei:CallMethodAction MethodName="AddNewAccount" TargetObject="{Binding Mode=OneWay}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TextBlock Margin="8,0"
                                       Foreground="White"
                                       Text="新しいアカウントを追加" />
                        </Button>
                        <Button DockPanel.Dock="Left" Style="{StaticResource MetroSquareButtonStyle}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <ei:CallMethodAction MethodName="SetApiKeys" TargetObject="{Binding Mode=OneWay}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TextBlock Margin="8,0" Text="API キーの再設定" />
                        </Button>
                    </DockPanel>
                </Grid>
                <Grid Grid.Column="1" Margin="0,6,0,0">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=SettingCategories, Path=SelectedIndex}" Value="1">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <StackPanel Margin="16,0" Orientation="Vertical">
                        <CheckBox Margin="0,0,0,8"
                                  VerticalAlignment="Top"
                                  Content="自分自身をお気に入り登録できるようにする(_F)"
                                  IsChecked="{Binding IsAllowFavoriteMyself}" />
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="2,0,6,0"
                                       VerticalAlignment="Center"
                                       Text="タイムラインのスクロールロック:" />
                            <ComboBox SelectedIndex="{Binding ScrollLockStrategy, Mode=TwoWay}">
                                <clr:String>ロックしない</clr:String>
                                <clr:String>常にロック</clr:String>
                                <clr:String>明示的にロック(実装されていません)</clr:String>
                                <clr:String>スクロールしていたらロック</clr:String>
                                <clr:String>タイムライン上にマウスがあるときにロック</clr:String>
                            </ComboBox>
                        </StackPanel>
                    </StackPanel>
                </Grid>
                <Grid Grid.Column="1" Margin="0,6,0,0">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=SettingCategories, Path=SelectedIndex}" Value="2">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid Margin="16,0" Background="#FFF0F0F0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Margin="24,0"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Text="ミュート クエリの編集" />
                        <TextBlock Margin="8,8,8,4" HorizontalAlignment="Right">
                            <Hyperlink Command="{Binding OpenQueryReferenceCommand}">Krile Queryのヘルプ...</Hyperlink>
                        </TextBlock>
                        <Button Grid.Column="1"
                                HorizontalAlignment="Right"
                                Content="編集をリセット"
                                Style="{StaticResource MetroSquareButtonStyle}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <ei:CallMethodAction MethodName="ResetFilter" TargetObject="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                    </Grid>
                    <controls:QueryEditor Grid.Row="1"
                                          Margin="16,0"
                                          Background="#FFF0F0F0"
                                          QueryText="{Binding QueryString,
                                                              Mode=TwoWay}" />
                    <TextBlock Grid.Row="2"
                               Margin="16,0"
                               Background="#60E51400"
                               Padding="4"
                               Text="{Binding ExceptionMessage}"
                               Visibility="{Binding FoundError,
                                                    Converter={StaticResource BoolVisibleConveter}}" />
                    <TextBlock Grid.Row="3"
                               Margin="16,0,16,16"
                               VerticalAlignment="Top"
                               Foreground="White"
                               Padding="4"
                               TextWrapping="Wrap">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Background" Value="#FF1BA1E2" />
                                <Setter Property="Text" Value="クエリを正しく解析できました。" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding FoundError}" Value="True">
                                        <Setter Property="Background" Value="#FFE51400" />
                                        <Setter Property="Text" Value="クエリにエラーが存在します。(現在の結果は反映されません)" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Grid>
        </Grid>
    </flips:FlipContent>
</UserControl>
